{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/FRONT-END/ReactJS/simple-calculator-react/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const inputRef = useRef(null);\n  const resultRef = useRef(null);\n  const [result, setResult] = useState(0);\n  function plus(e) {\n    e.preventDefault();\n    setResult(result => result + Number(inputRef.current.value));\n  }\n  ;\n  function minus(e) {\n    e.preventDefault();\n    setResult(result => result - Number(inputRef.current.value));\n  }\n  ;\n  function times(e) {\n    e.preventDefault();\n    setResult(result => result * Number(inputRef.current.value));\n  }\n  ;\n  function divide(e) {\n    e.preventDefault();\n    setResult(result => result / Number(inputRef.current.value));\n  }\n  ;\n  function resetInput(e) {\n    e.preventDefault();\n    setResult(result => result + Number(inputRef.current.value));\n  }\n  ;\n  function resetResult(e) {\n    e.preventDefault();\n    setResult(result => result + Number(inputRef.current.value));\n  }\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Simplest Working Calculator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        ref: resultRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        pattern: \"[0-9]\",\n        ref: inputRef,\n        type: \"number\",\n        placeholder: \"Type a number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: plus,\n        children: \"add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: subtract,\n        children: \"subtract\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: multiply,\n        children: \"multiply\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: divide,\n        children: \"divide\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetInput,\n        children: \"reset input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetResult,\n        children: \"reset result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"iMUG+fAB4x2aPXzcLfNNNKt0TI8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","App","inputRef","resultRef","result","setResult","plus","e","preventDefault","Number","current","value","minus","times","divide","resetInput","resetResult","subtract","multiply"],"sources":["/Users/mac/Documents/FRONT-END/ReactJS/simple-calculator-react/src/App.js"],"sourcesContent":["import React, { useState, useRef } from 'react'; \nimport './App.css'\n\nfunction App() {\n\n  const inputRef = useRef(null); \n  const resultRef = useRef(null); \n  const [result, setResult] = useState(0); \n \n  function plus(e) { \n    e.preventDefault(); \n    setResult((result) => result + Number(inputRef.current.value)); \n  }; \n \n  function minus(e) { \n    e.preventDefault(); \n    setResult((result) => result - Number(inputRef.current.value)); \n  };\n \n  function times(e) { \n    e.preventDefault(); \n    setResult((result) => result * Number(inputRef.current.value)); \n  }; \n \n  function divide(e) { \n    e.preventDefault(); \n    setResult((result) => result / Number(inputRef.current.value)); \n  };\n \n  function resetInput(e) { \n    e.preventDefault(); \n    setResult((result) => result + Number(inputRef.current.value)); \n  }; \n \n  function resetResult(e) { \n    e.preventDefault(); \n    setResult((result) => result + Number(inputRef.current.value)); \n  }; \n\n  return ( \n    <div className=\"App\"> \n      <div> \n        <h1>Simplest Working Calculator</h1> \n      </div>\n\n      <form> \n        <p ref={resultRef}> \n          {/* add the value of the current total */} \n        </p> \n        <input\n          pattern=\"[0-9]\" \n          ref={inputRef} \n          type=\"number\"\n          placeholder=\"Type a number\" \n        /> \n        <button onClick={plus}>add</button>\n        <button onClick={subtract}>subtract</button>\n        <button onClick={multiply}>multiply</button>\n        <button onClick={divide}>divide</button>\n        <button onClick={resetInput}>reset input</button>\n        <button onClick={resetResult}>reset result</button> \n      </form> \n    </div> \n  );\n}\n\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,OAAO,WAAW;AAAA;AAElB,SAASC,GAAG,GAAG;EAAA;EAEb,MAAMC,QAAQ,GAAGF,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMG,SAAS,GAAGH,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM,CAACI,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EAEvC,SAASO,IAAI,CAACC,CAAC,EAAE;IACfA,CAAC,CAACC,cAAc,EAAE;IAClBH,SAAS,CAAED,MAAM,IAAKA,MAAM,GAAGK,MAAM,CAACP,QAAQ,CAACQ,OAAO,CAACC,KAAK,CAAC,CAAC;EAChE;EAAC;EAED,SAASC,KAAK,CAACL,CAAC,EAAE;IAChBA,CAAC,CAACC,cAAc,EAAE;IAClBH,SAAS,CAAED,MAAM,IAAKA,MAAM,GAAGK,MAAM,CAACP,QAAQ,CAACQ,OAAO,CAACC,KAAK,CAAC,CAAC;EAChE;EAAC;EAED,SAASE,KAAK,CAACN,CAAC,EAAE;IAChBA,CAAC,CAACC,cAAc,EAAE;IAClBH,SAAS,CAAED,MAAM,IAAKA,MAAM,GAAGK,MAAM,CAACP,QAAQ,CAACQ,OAAO,CAACC,KAAK,CAAC,CAAC;EAChE;EAAC;EAED,SAASG,MAAM,CAACP,CAAC,EAAE;IACjBA,CAAC,CAACC,cAAc,EAAE;IAClBH,SAAS,CAAED,MAAM,IAAKA,MAAM,GAAGK,MAAM,CAACP,QAAQ,CAACQ,OAAO,CAACC,KAAK,CAAC,CAAC;EAChE;EAAC;EAED,SAASI,UAAU,CAACR,CAAC,EAAE;IACrBA,CAAC,CAACC,cAAc,EAAE;IAClBH,SAAS,CAAED,MAAM,IAAKA,MAAM,GAAGK,MAAM,CAACP,QAAQ,CAACQ,OAAO,CAACC,KAAK,CAAC,CAAC;EAChE;EAAC;EAED,SAASK,WAAW,CAACT,CAAC,EAAE;IACtBA,CAAC,CAACC,cAAc,EAAE;IAClBH,SAAS,CAAED,MAAM,IAAKA,MAAM,GAAGK,MAAM,CAACP,QAAQ,CAACQ,OAAO,CAACC,KAAK,CAAC,CAAC;EAChE;EAAC;EAED,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB;MAAA,uBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAoC;MAAA;MAAA;MAAA;IAAA,QAChC,eAEN;MAAA,wBACE;QAAG,GAAG,EAAER;MAAU;QAAA;QAAA;QAAA;MAAA,QAEd,eACJ;QACE,OAAO,EAAC,OAAO;QACf,GAAG,EAAED,QAAS;QACd,IAAI,EAAC,QAAQ;QACb,WAAW,EAAC;MAAe;QAAA;QAAA;QAAA;MAAA,QAC3B,eACF;QAAQ,OAAO,EAAEI,IAAK;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAa,eACnC;QAAQ,OAAO,EAAEW,QAAS;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAkB,eAC5C;QAAQ,OAAO,EAAEC,QAAS;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAkB,eAC5C;QAAQ,OAAO,EAAEJ,MAAO;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAgB,eACxC;QAAQ,OAAO,EAAEC,UAAW;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAqB,eACjD;QAAQ,OAAO,EAAEC,WAAY;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAsB;IAAA;MAAA;MAAA;MAAA;IAAA,QAC9C;EAAA;IAAA;IAAA;IAAA;EAAA,QACH;AAEV;AAAC,GA7DQf,GAAG;AAAA,KAAHA,GAAG;AAgEZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}